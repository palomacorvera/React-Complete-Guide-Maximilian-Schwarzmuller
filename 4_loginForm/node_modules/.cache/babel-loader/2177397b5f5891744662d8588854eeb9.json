{"ast":null,"code":"var _jsxFileName = \"/Users/paloma/Desktop/01-starting-project/src/context/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthCOntextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthCOntextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthCOntextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthCOntextProvider\");","map":{"version":3,"sources":["/Users/paloma/Desktop/01-starting-project/src/context/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthCOntextProvider","props","setIsLoggedIn","logoutHandler","loginHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAIF,KAAK,CAACG,aAAN,CAAoB;AACrCC,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,QAAQ,EAAG,MAAM,CAAE;AAFkB,CAApB,CAArB;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACH,UAAD,EAAaI,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cAAuBD,KAAK,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAZM;;GAAML,mB;;KAAAA,mB;AAcb,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst AuthContext =  React.createContext({\n    isLoggedIn: false,\n    onLogout:  () => {}\n});\n\nexport const AuthCOntextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const logoutHandler = () => {\n        setIsLoggedIn(false);\n    };\n\n    const loginHandler = () => {\n        setIsLoggedIn(true);\n    }\n\n    return <AuthContext.Provider>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}